name: Create Launch Template

on:
  pull_request:
    types:
      - closed
    branches: [ "main" ]

jobs:
  create_launch_template:
    if: github.event.pull_request.merged == true
    runs-on: ubuntu-latest
    needs: packer_build
    env:
      AWS_ACCESS_KEY_ID: ${{ secrets.DEMO_AWS_ACCESS_KEY_ID }}
      AWS_SECRET_ACCESS_KEY: ${{ secrets.DEMO_AWS_SECRET_ACCESS_KEY }}
      AWS_DEFAULT_REGION: ${{ secrets.DEFAULT_REGION }}
    
    steps:
      - uses: actions/checkout@v3

      - name: Download packer manifest.json
        uses: actions/download-artifact@v3
        with:
          name: pkr_manifest

      - name: Get latest AMI ID and Launch Template Version
        id: env-vars
        run: |
          ami_id=$(jq -r '.builds[0].artifact_id | split(":")[1]' pkr_manifest.json)
          echo "ami_id=$ami_id" >> $GITHUB_ENV

          version_num=$(aws ec2 describe-launch-template-versions --launch-template-name asg_launch_config --query 'sort_by(LaunchTemplateVersions, &VersionNumber)[-1].VersionNumber' --output text)
          echo "version_num=$version_num" >> $GITHUB_ENV
          
      - name: Create new Launch Template version
        run: |
          aws ec2 create-launch-template-version --launch-template-name asg_launch_config  --launch-template-data "ImageId=${{ env.ami_id }}" --source-version ${{ env.version_num }}

      - name: Start Autoscaling instance refresh
        run: |
          aws autoscaling start-instance-refresh --auto-scaling-group-name aws-dev-asg --strategy Rolling --desired-configuration '{"LaunchTemplate": {"LaunchTemplateName":"asg_launch_config", "Version":"$Latest"}}'